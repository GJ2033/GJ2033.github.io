<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java异常学习</title>
      <link href="2020/121616109.html"/>
      <url>2020/121616109.html</url>
      
        <content type="html"><![CDATA[<h1 id="Java异常学习"><a href="#Java异常学习" class="headerlink" title="Java异常学习"></a>Java异常学习</h1><h2 id="1-1-示例"><a href="#1-1-示例" class="headerlink" title="1.1 示例"></a>1.1 示例</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java">public static void main(String[] args) &#123;    Scanner in &#x3D; new Scanner(System.in);    int[] a &#x3D; new int[10];  &#x2F;&#x2F;创建长度为10的一维数组    int idx;    idx &#x3D; in.nextInt();     &#x2F;&#x2F;由用户输入数组索引    try&#123;        a[idx] &#x3D; 10;        System.out.println(&quot;hello&quot;);    &#125;    catch (ArrayIndexOutOfBoundsException e) &#123;        System.out.println(&quot;caught&quot;);    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述代码捕获ArrayIndexOutOfBoundsException异常，当用户输入idx值超过数组最大索引时，触发异常捕获，print(“hello”)部分将不会执行，输出”caught”。</p><h2 id="1-2基本代码格式"><a href="#1-2基本代码格式" class="headerlink" title="1.2基本代码格式"></a>1.2基本代码格式</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java">try &#123;    &quot;代码块&quot;&#125;catch (exception1 e)&#123;    &quot;处理exception1异常的代码&quot;&#125;catch (exception2 e)&#123;    &quot;处理exception2异常的代码&quot;&#125;...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-3-异常捕捉机制"><a href="#1-3-异常捕捉机制" class="headerlink" title="1.3 异常捕捉机制"></a>1.3 异常捕捉机制</h2><p><img src="/images/Exception.PNG" alt="异常捕获机制" title="Exception"></p><h2 id="1-4-捕获异常后如何处理"><a href="#1-4-捕获异常后如何处理" class="headerlink" title="1.4 捕获异常后如何处理"></a>1.4 捕获异常后如何处理</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java">catch (exception e)&#123;    System.println(e.getMessage());    System.println(e);    e.printStackTrace();&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>具体如何处理取决于业务逻辑需要<br>如果不需要在当前层面处理异常，则可以再次抛出，代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">catch (exception e)&#123;    &quot;该层处理逻辑&quot;    throw e;    &#x2F;&#x2F;再次抛出异常，由下一层处理&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-5-示例"><a href="#1-5-示例" class="headerlink" title="1.5 示例"></a>1.5 示例</h2><p>读文件的步骤：</p><ol><li>打开文件</li><li>判断文件大小</li><li>分配内存</li><li>把文件内容读入内存</li><li>关闭文件<br>每一步依赖上一步的正常工作。<pre class="line-numbers language-java" data-language="java"><code class="language-java">try&#123;    open the file;    determine its size;    allocate that much memory;    read the file into memory;    close the file;&#125;catch(fileOpenFailed)&#123;    doSomething;&#125;catch(sizeDeterminationFailed)&#123;    doSomething;&#125;catch(memoryAllocationFailed)&#123;    doSomething;&#125;catch(readFailed)&#123;    doSomething;&#125;catch(fileCloseFailed)&#123;    doSomething;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>异常机制分开了业务逻辑和错误处理代码。</li></ol><h3 id="1-6-异常的抛出"><a href="#1-6-异常的抛出" class="headerlink" title="1.6 异常的抛出"></a>1.6 异常的抛出</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java">class OpenException extends Throwable&#123;  &#x2F;&#x2F;能抛出异常的类继承了Throwable类&#125;&#x2F;&#x2F;Exception类继承了Throwable类，自定义类也可以继承自Exception类。public static void readFile() throws OpenException&#123; &#x2F;&#x2F;如果函数可能抛出异常，则要添加throws    if(open() &#x3D;&#x3D; -1)&#123;               &#x2F;&#x2F;而对于想ArrayIndexOutOfBoundsException这样的异常是不用声明的        throw new OpenException();    &#125;&#125;public static void main(String[] args)&#123;    try&#123;        readFile();    &#125; catch(OpenException e)&#123;        ...    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-7-catch是怎么匹配异常的"><a href="#1-7-catch是怎么匹配异常的" class="headerlink" title="1.7 catch是怎么匹配异常的"></a>1.7 catch是怎么匹配异常的</h3><p>is-A的关系<br>抛出子类的异常能被捕获父类异常的catch捕捉到<br>因此<code>catch(Exception e)</code>可以捕捉任何异常</p><h3 id="1-8-异常遇到继承"><a href="#1-8-异常遇到继承" class="headerlink" title="1.8 异常遇到继承"></a>1.8 异常遇到继承</h3><ul><li><p>子类中成员函数不能抛出与父类同名的成员函数更多的异常，因为存在用一个父类类型管理子类对象的情况</p></li><li><p>子类的构造函数应包含父类构造函数抛出的异常，应为生成子类对象时会调用父类的构造函数。</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基础语法</title>
      <link href="2020/121516108.html"/>
      <url>2020/121516108.html</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown语法教程"><a href="#Markdown语法教程" class="headerlink" title="Markdown语法教程"></a>Markdown语法教程</h1><h2 id="1-Markdown标题语法"><a href="#1-Markdown标题语法" class="headerlink" title="1.Markdown标题语法"></a>1.Markdown标题语法</h2><p>在单词或短语前添加#号，#的数量代表了标题的级别</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># here's is a heading</span></code></pre><h1 id="here’s-is-a-heading"><a href="#here’s-is-a-heading" class="headerlink" title="here’s is a heading"></a>here’s is a heading</h1><h2 id="2-Markdown段落语法"><a href="#2-Markdown段落语法" class="headerlink" title="2.Markdown段落语法"></a>2.Markdown段落语法</h2><p>使用空白行将一行或多行文本进行分隔  </p><pre class=" language-bash"><code class="language-bash">I really like using  Markdown.I think I'll use it to   <span class="token function">format</span> all of my  documents from now on.</code></pre><p>I really like using<br>Markdown.</p><p>I think I’ll use it to<br>format all of my<br>documents from now on.</p><h2 id="3-Markdown换行语法"><a href="#3-Markdown换行语法" class="headerlink" title="3.Markdown换行语法"></a>3.Markdown换行语法</h2><p>在一行的末尾添加两个或多个空格，然后按回车键，即可创建一个换行。<br><code>This is the first line.\s\s   And this is the second   line.\s\s</code></p><p>This is the first line.<br>And this is the second<br>line.  </p><h2 id="4-Markdown强调语法"><a href="#4-Markdown强调语法" class="headerlink" title="4.Markdown强调语法"></a>4.Markdown强调语法</h2><h3 id="粗体（bold）"><a href="#粗体（bold）" class="headerlink" title="粗体（bold）"></a>粗体（bold）</h3><p>要加粗文本，在单词或短语的前后各添加两个星号。  </p><pre class=" language-bash"><code class="language-bash">Love**is**bold</code></pre><p>Love<strong>is</strong>bold</p><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><p>在单词或短语前后添加一个星号或下划线  </p><pre class=" language-bash"><code class="language-bash">Italicized text is the *cat<span class="token string">'s meow*.  Italicized text is the _cat'</span>s meow_.  A*cat*meow</code></pre><p>Italicized text is the <em>cat’s meow</em>.<br>Italicized text is the <em>cat’s meow</em>.<br>A<em>cat</em>meow  </p><h3 id="粗体和斜体"><a href="#粗体和斜体" class="headerlink" title="粗体和斜体"></a>粗体和斜体</h3><p>要同时用粗体和斜体突出显示文本，在单词或短语的前后各添加三个星号或下划线。  </p><pre class=" language-bash"><code class="language-bash">This text is ***really important***.  This text is ___really important___.  This text is __*really important*__.  This text is **_really important_**.</code></pre><p>This text is <strong><em>really important</em></strong>.<br>This text is <strong><em>really important</em></strong>.<br>This text is <strong><em>really important</em></strong>.<br>This text is <strong><em>really important</em></strong>.  </p><h2 id="5-Markdown引用语法"><a href="#5-Markdown引用语法" class="headerlink" title="5.Markdown引用语法"></a>5.Markdown引用语法</h2><p>要创建块引用，在段落前添加一个&gt;符号</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">></span> Dorothy followed her through many of the beautiful rooms <span class="token keyword">in</span> her castle.</code></pre><blockquote><p>Dorothy followed her through many of the beautiful rooms in her castle.</p></blockquote><p>多个段落的块引用，为段落之间的空白行添加一个&gt;符号。</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">></span>Dorothy followed her through many of the beautiful rooms <span class="token keyword">in</span> her castle.<span class="token operator">></span><span class="token operator">></span>The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</code></pre><blockquote><p>Dorothy followed her through many of the beautiful rooms in her castle.</p><p>The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</p></blockquote><p>嵌套块引用，在要嵌套的段落前添加一个&gt;&gt;符号。</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">></span>Dorothy followed her through many of the beautiful rooms <span class="token keyword">in</span> her castle.<span class="token operator">></span><span class="token operator">>></span>The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</code></pre><blockquote><p>Dorothy followed her through many of the beautiful rooms in her castle.</p><blockquote><p>The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.<br>带有其他元素的块引用块引用可以包含其他Markdown格式的元素。并非所有元素都可以使用，你需要进行实验以查看哪些元素有效。</p></blockquote></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token operator">></span> <span class="token comment" spellcheck="true">#### The quarterly results look great!</span><span class="token operator">></span><span class="token operator">></span> - Revenue was off the chart.<span class="token operator">></span> - profits were higher than ever.<span class="token operator">></span><span class="token operator">></span>  *Everything* is going according to **plan**.</code></pre><blockquote><h4 id="The-quarterly-results-look-great"><a href="#The-quarterly-results-look-great" class="headerlink" title="The quarterly results look great!"></a>The quarterly results look great!</h4><ul><li>Revenue was off the chart.</li><li>profits were higher than ever.</li></ul><p> <em>Everything</em> is going according to <strong>plan</strong>.</p></blockquote><h2 id="6-Markdown列表语法"><a href="#6-Markdown列表语法" class="headerlink" title="6.Markdown列表语法"></a>6.Markdown列表语法</h2><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>要创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点。数字不必按数学顺序排列，但是列表应当以数字1起始。<br>示例1</p><pre class=" language-bash"><code class="language-bash">1. first item2. Second item</code></pre><ol><li>first item</li><li>Second item</li></ol><p>示例2  </p><pre class=" language-bash"><code class="language-bash">1. First item2. Second item</code></pre><ol><li>First item</li><li>Second item</li></ol><p>示例3</p><pre class=" language-bash"><code class="language-bash">1. First item2. Second item</code></pre><ol><li>First item</li><li>Second item</li></ol><p>示例4</p><pre class=" language-bash"><code class="language-bash">1. First item2. Second item3. Third item    1. Indented item    2. Indented item4. Fourth item</code></pre><ol><li>First item</li><li>Second item</li><li>Third item<ol><li>Indented item</li><li>Indented item</li></ol></li><li>Fourth item</li></ol><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>要创建无序列表，请在每个列表项前面添加破折号（-）、星号（*）或加号（+）。缩进一个或多个列表项可创建嵌套列表。<br>示例1</p><pre class=" language-bash"><code class="language-bash"> - First item - Second item - Third item - Fourth item</code></pre><ul><li>First item</li><li>Second item</li><li>Third item</li><li>Fourth item</li></ul><p>示例2</p><pre class=" language-bash"><code class="language-bash">* First item* Second item* Third item* Fourth item</code></pre><ul><li>First item</li><li>Second item</li><li>Third item</li><li>Fourth item</li></ul><p>示例3</p><pre class=" language-bash"><code class="language-bash">+ First item+ Second item+ Third item+ Fourth item</code></pre><ul><li>First item</li><li>Second item</li><li>Third item</li><li>Fourth item</li></ul><p>示例4</p><pre class=" language-bash"><code class="language-bash">- First item- Second item- Third item - Indented item - Indented item- Fourth item</code></pre><ul><li>First item</li><li>Second item</li><li>Third item<ul><li>Indented item</li><li>Indented item</li></ul></li><li>Fourth item</li></ul><h3 id="在列表中嵌套其他元素"><a href="#在列表中嵌套其他元素" class="headerlink" title="在列表中嵌套其他元素"></a>在列表中嵌套其他元素</h3><p>要在保留列表连续性的同时在列表中添加另一种元素，请将该元素缩进四个空格或一个制表符。</p><h4 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h4><pre class=" language-bash"><code class="language-bash">* This is the first list item.* Here<span class="token string">'s the second list item.    I need to add another paragraph below the second list item.* And here'</span>s the third list item.</code></pre><ul><li><p>This is the first list item.</p></li><li><p>Here’s the second list item.</p><p>  I need to add another paragraph below the   second list item.</p></li><li><p>And here’s the third list item.</p></li></ul><h4 id="引用块"><a href="#引用块" class="headerlink" title="引用块"></a>引用块</h4><pre class=" language-bash"><code class="language-bash">* This is the first list item.* Here<span class="token string">'s the second list item.    > A blockquote would look great below the second list item.* And here'</span>s the third list item.</code></pre><ul><li><p>This is the first list item.</p></li><li><p>Here’s the second list item.</p><blockquote><p>A blockquote would look great below the second list item.</p></blockquote></li><li><p>And here’s the third list item.</p></li></ul><h4 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h4><p>代码块通常采用四个空格或一个制表符缩进。当它们被放在列表中时，请将它们缩进八个空格或两个制表符。</p><pre class=" language-bash"><code class="language-bash">1.  Open the file.2.  Find the following code block on line 21:    ``<span class="token variable"><span class="token variable">`</span><span class="token function">bash</span>        <span class="token operator">&lt;</span>html<span class="token operator">></span>            <span class="token operator">&lt;</span>head<span class="token operator">></span>            <span class="token operator">&lt;</span>title<span class="token operator">></span>Test<span class="token operator">&lt;</span>/title<span class="token operator">></span>            <span class="token operator">&lt;</span>/head<span class="token operator">></span>    <span class="token variable">`</span></span>``3.  Update the title to match the name of your website.</code></pre><ol><li><p> Open the file.</p></li><li><p>Find the following code block on line 21:</p><pre><code> &lt;html&gt;   &lt;head&gt;     &lt;title&gt;Test&lt;/title&gt;   &lt;/head&gt;</code></pre></li><li><p> Update the title to match the name of your website.</p></li></ol><h2 id="7-Markdown代码语法"><a href="#7-Markdown代码语法" class="headerlink" title="7.Markdown代码语法"></a>7.Markdown代码语法</h2><p>要将单词或短语表示为代码，请将其包裹在反引号中。  </p><pre class=" language-bash"><code class="language-bash">At the <span class="token function">command</span> prompt,<span class="token function">type</span> <span class="token variable"><span class="token variable">`</span><span class="token function">nano</span><span class="token variable">`</span></span></code></pre><p>At the command prompt,<br>type <code>nano</code></p><h3 id="转义反引号"><a href="#转义反引号" class="headerlink" title="转义反引号"></a>转义反引号</h3><p>如果你要表示为代码的单词或短语中包含一个或多个反引号，则可以通过将单词或短语包裹在双反引号中。  </p><pre class=" language-bash"><code class="language-bash">`<span class="token variable"><span class="token variable">`</span>Use <span class="token variable">`</span></span>code<span class="token variable"><span class="token variable">`</span> <span class="token keyword">in</span>  your  Markdown file.<span class="token variable">`</span></span>`</code></pre><p><code>Use `code` in  your   Markdown file.</code></p><h3 id="代码块-1"><a href="#代码块-1" class="headerlink" title="代码块"></a>代码块</h3><p>要创建代码块，请将代码块的每一行缩进至少四个空格或一个制表符。</p><pre class=" language-bash"><code class="language-bash">    <span class="token operator">&lt;</span>html<span class="token operator">></span>     <span class="token operator">&lt;</span>head<span class="token operator">></span>     <span class="token operator">&lt;</span>/head<span class="token operator">></span>    <span class="token operator">&lt;</span>/html<span class="token operator">></span></code></pre><p>  如下：</p><pre class=" language-bash"><code class="language-bash">    <span class="token operator">&lt;</span>html<span class="token operator">></span>     <span class="token operator">&lt;</span>head<span class="token operator">></span>     <span class="token operator">&lt;</span>/head<span class="token operator">></span>    <span class="token operator">&lt;</span>/html<span class="token operator">></span></code></pre><h2 id="8-Markdown分隔线语法"><a href="#8-Markdown分隔线语法" class="headerlink" title="8.Markdown分隔线语法"></a>8.Markdown分隔线语法</h2><p>要创建分隔线，请在单独一行上使用三个或多个星号（***）、破折号（—）或下划线（___）,并且不能包含其他内容。</p><pre class=" language-bash"><code class="language-bash">Try to put a blank line before<span class="token punctuation">..</span>.***<span class="token punctuation">..</span>.and after a horizontal rule.</code></pre><p>Try to put a blank line before…</p><hr><p>…and after a horizontal rule.</p><h2 id="9-Markdown链接语法"><a href="#9-Markdown链接语法" class="headerlink" title="9.Markdown链接语法"></a>9.Markdown链接语法</h2><p>链接文本放在中括号内，链接地址放在后面的括号中，链接title可选。<br>超链接Markdown语法代码：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>超链接显示名<span class="token punctuation">]</span><span class="token punctuation">(</span>超链接地址 “超链接title”<span class="token punctuation">)</span>这是一个链接<span class="token punctuation">[</span>Markdown语法<span class="token punctuation">]</span><span class="token punctuation">(</span>https://markdown.com.cn<span class="token punctuation">)</span>。</code></pre><p>这是一个链接<a href="https://markdown.com.cn/">Markdown语法</a>。</p><h3 id="给链接增加Title"><a href="#给链接增加Title" class="headerlink" title="给链接增加Title"></a>给链接增加Title</h3><p>链接title是当鼠标悬停在链接上时会出现的文字，这个title是可选的，它放在圆括号中链接地址后面，跟链接地址之间以空格分隔。</p><pre class=" language-bash"><code class="language-bash">这是一个链接 <span class="token punctuation">[</span>Markdown语法<span class="token punctuation">]</span><span class="token punctuation">(</span>https://markdown.com.cn <span class="token string">"最好的markdown教程"</span><span class="token punctuation">)</span>。</code></pre><p>这是一个链接 <a href="https://markdown.com.cn/" title="最好的markdown教程">Markdown语法</a>。</p><h3 id="网址和Email地址"><a href="#网址和Email地址" class="headerlink" title="网址和Email地址"></a>网址和Email地址</h3><p>使用尖括号可以很方便地把URL或者email地址变成可点击的链接。</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>https://markdown.com.cn<span class="token operator">></span><span class="token operator">&lt;</span>fake@example.com<span class="token operator">></span></code></pre><p><a href="https://markdown.com.cn/">https://markdown.com.cn</a><br><a href="mailto:&#x66;&#x61;&#107;&#101;&#x40;&#101;&#120;&#97;&#109;&#x70;&#108;&#x65;&#x2e;&#x63;&#111;&#109;">&#x66;&#x61;&#107;&#101;&#x40;&#101;&#120;&#97;&#109;&#x70;&#108;&#x65;&#x2e;&#x63;&#111;&#109;</a></p><h3 id="带格式化的链接"><a href="#带格式化的链接" class="headerlink" title="带格式化的链接"></a>带格式化的链接</h3><p>强调链接，在链接语法前后增加星号。要将链接表示为代码，请在方括号中添加反引号。</p><pre class=" language-bash"><code class="language-bash">I love supporting the **<span class="token punctuation">[</span>EFF<span class="token punctuation">]</span><span class="token punctuation">(</span>https://eff.org<span class="token punctuation">)</span>**.This is the *<span class="token punctuation">[</span>Markdown Guide<span class="token punctuation">]</span><span class="token punctuation">(</span>https://www.markdownguide.org<span class="token punctuation">)</span>*.See the section on <span class="token punctuation">[</span><span class="token variable"><span class="token variable">`</span>code<span class="token variable">`</span></span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token comment" spellcheck="true">#code).</span></code></pre><p>I love supporting the <strong><a href="https://eff.org/">EFF</a></strong>.<br>This is the <em><a href="https://www.markdownguide.org/">Markdown Guide</a></em>.<br>See the section on <a href="#code"><code>code</code></a>.</p><h3 id="引用类型链接"><a href="#引用类型链接" class="headerlink" title="引用类型链接"></a>引用类型链接</h3><p>引用样式链接是一种特殊的链接，它使URL在Markdown中更易于显示和阅读。参考样式链接分为两部分：与文本保持内联的部分以及存储在文件中其他位置的部分，以使文本易于阅读。</p><h4 id="链接的第一部分格式"><a href="#链接的第一部分格式" class="headerlink" title="链接的第一部分格式"></a>链接的第一部分格式</h4><p>引用类型的链接的第一部分使用两组括号进行格式设置。第一组方括号包围应显示为链接的文本。第二组括号显示了一个标签，该标签用于指向您存储在文档其他位置的链接。</p><p>尽管不是必需的，可以在第一组和第二组括号之间包含一个空格。第二组括号中的标签不区分大小写，可以包含字母、数字、空格或标点符号。</p><p>以下示例格式对于链接的第一部分效果相同：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>hobbit-hole<span class="token punctuation">]</span><span class="token punctuation">[</span>1<span class="token punctuation">]</span><span class="token punctuation">[</span>hobbit-hole<span class="token punctuation">]</span> <span class="token punctuation">[</span>1<span class="token punctuation">]</span></code></pre><p>链接的第二部分格式<br>引用类型链接的第二部分使用以下属性设置格式：<br>1.放在括号中的标签，其后紧跟一个冒号和至少一个空格(例如<code>[label]:</code>)。<br>2.链接的URL，可以选择将其括在尖括号中。<br>3.链接的可选标题，可以将其括在双引号中，单引号或括号中。</p><p>以下示例格式对于链接的第二部分效果相同：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>1<span class="token punctuation">]</span>: https://en.wikipedia.org/wiki/Hobbit<span class="token comment" spellcheck="true">#Lifestyle</span><span class="token punctuation">[</span>1<span class="token punctuation">]</span>: https://en.wikipedia.org/wiki/Hobbit<span class="token comment" spellcheck="true">#Lifestyle "Hobbit lifestyles"</span><span class="token punctuation">[</span>1<span class="token punctuation">]</span>: https://en.wikipedia.org/wiki/Hobbit<span class="token comment" spellcheck="true">#Lifestyle 'Hobbit lifestyles'</span><span class="token punctuation">[</span>1<span class="token punctuation">]</span>: https://en.wikipedia.org/wiki/Hobbit<span class="token comment" spellcheck="true">#Lifestyle (Hobbit lifestyles)</span><span class="token punctuation">[</span>1<span class="token punctuation">]</span>: <span class="token operator">&lt;</span>https://en.wikipedia.org/wiki/Hobbit<span class="token comment" spellcheck="true">#Lifestyle> "Hobbit lifestyles"</span><span class="token punctuation">[</span>1<span class="token punctuation">]</span>: <span class="token operator">&lt;</span>https://en.wikipedia.org/wiki/Hobbit<span class="token comment" spellcheck="true">#Lifestyle> 'Hobbit lifestyles'</span><span class="token punctuation">[</span>1<span class="token punctuation">]</span>: <span class="token operator">&lt;</span>https://en.wikipedia.org/wiki/Hobbit<span class="token comment" spellcheck="true">#Lifestyle> (Hobbit lifestyles)</span></code></pre><p>可以将链接的第二部分放在Markdown文档中的任何位置。有些人将它们放在出现的段落之后，有些人则将它们放在文档的末尾(例如尾注或脚注)。</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>hobbit-hole<span class="token punctuation">]</span><span class="token punctuation">[</span>1<span class="token punctuation">]</span><span class="token punctuation">[</span>1<span class="token punctuation">]</span>: <span class="token operator">&lt;</span>https://en.wikipedia.org/wiki/Hobbit<span class="token comment" spellcheck="true">#Lifestyle> (Hobbit lifestyles)</span></code></pre><p><a href="https://en.wikipedia.org/wiki/Hobbit#Lifestyle" title="Hobbit lifestyles">hobbit-hole</a></p><h2 id="10-Markdown图片语法"><a href="#10-Markdown图片语法" class="headerlink" title="10.Markdown图片语法"></a>10.Markdown图片语法</h2><p>要添加图像，请使用感叹号(<code>!</code>)，然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。</p><p>插入图片Markdown语法代码：<code>![图片alt](图片链接&quot;图片title&quot;)</code>。</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">!</span><span class="token punctuation">[</span>这是蒲公英图片<span class="token punctuation">]</span><span class="token punctuation">(</span>/images/flower.jpg <span class="token string">"Magic Gardens"</span><span class="token punctuation">)</span></code></pre><p><img src="/images/flower.jpg" alt="这是蒲公英图片" title="Magic Gardens"></p><p>给图片增加链接，请将图像的Markdown括在方括号中，然后将链接添加在圆括号中。</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">[</span>宠物猫<span class="token punctuation">]</span><span class="token punctuation">(</span>/images/cat.jpg <span class="token string">"Shiprock"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">(</span>https://markdown.com.cn<span class="token punctuation">)</span></code></pre><p><a href="https://markdown.com.cn/"><img src="/images/cat.jpg" alt="宠物猫" title="Shiprock"></a></p><h2 id="11-Markdown转义字符语法"><a href="#11-Markdown转义字符语法" class="headerlink" title="11.Markdown转义字符语法"></a>11.Markdown转义字符语法</h2><p>要显示原本用于格式化Markdown文档的字符，请在字符前面添加反斜杠字符。</p><pre class=" language-bash"><code class="language-bash">\* Without the backslash, this would be a bullet <span class="token keyword">in</span> an unordered list.</code></pre><p>* Without the backslash, this would be a bullet in an unordered list.</p><h3 id="可做转义的字符"><a href="#可做转义的字符" class="headerlink" title="可做转义的字符"></a>可做转义的字符</h3><p>以下列出的字符都可以通过使用反斜杠字符从而达到转义目的。</p><table><thead><tr><th align="center">Character</th><th align="left">Name</th></tr></thead><tbody><tr><td align="center">\</td><td align="left">backslash</td></tr><tr><td align="center">`</td><td align="left">backtick</td></tr><tr><td align="center">*</td><td align="left">asterisk</td></tr><tr><td align="center">_</td><td align="left">underscore</td></tr><tr><td align="center">{}</td><td align="left">curly braces</td></tr><tr><td align="center">[]</td><td align="left">brackets</td></tr><tr><td align="center">()</td><td align="left">parentheses</td></tr><tr><td align="center">#</td><td align="left">pound sign</td></tr><tr><td align="center">+</td><td align="left">plus sign</td></tr><tr><td align="center">-</td><td align="left">minus sign (hyphen)</td></tr><tr><td align="center">.</td><td align="left">dot</td></tr><tr><td align="center">!</td><td align="left">exclamation mark</td></tr><tr><td align="center">|</td><td align="left">pipe</td></tr></tbody></table><h2 id="12-Markdown内嵌HTML标签"><a href="#12-Markdown内嵌HTML标签" class="headerlink" title="12.Markdown内嵌HTML标签"></a>12.Markdown内嵌HTML标签</h2><p>对于 Markdown 涵盖范围之外的标签，都可以直接在文件里面用 HTML 本身。如需使用 HTML，不需要额外标注这是 HTML 或是 Markdown，只需 HTML 标签添加到 Markdown 文本中即可。</p><h3 id="行级内联标签"><a href="#行级内联标签" class="headerlink" title="行级内联标签"></a>行级内联标签</h3><p>HTML的行级内联标签如<code>&lt;span&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;del&gt;</code>不受限制，可以在Markdown的段落、列表或是标题里任意使用。按照个人习惯，甚至可以不用Markdown格式，而采用HTML标签来格式化。例如：如果比较喜欢HTML的<code>&lt;a&gt;</code>或<code>&lt;img&gt;</code>标签，可以直接使用这些标签，而不用Markdown提供的链接或是图片语法。当需要更改元素的属性时，使用HTML标签更方便些。</p><p>HTML行级内联标签和区块标签不同，在内联标签的范围内，Markdown的语法是可以解析的。</p><pre class=" language-bash"><code class="language-bash">This **word** is bold. This <span class="token operator">&lt;</span>em<span class="token operator">></span>word<span class="token operator">&lt;</span>/em<span class="token operator">></span> is italic.</code></pre><p>This <strong>word</strong> is bold. This <em>word</em> is italic.</p><h3 id="区块标签"><a href="#区块标签" class="headerlink" title="区块标签"></a>区块标签</h3><p>区块元素——比如<code>&lt;div&gt;</code>、<code>&lt;pre&gt;</code>、<code>&lt;p&gt;</code>等标签，必须在前后加上空行，以便于内容区分。而且这些元素的开始与结尾标签，不可以用tab或是空白来缩进。<br>Markdown会自动识别这区块元素，避免在区块标签前后加上没有必要的<code>&lt;p&gt;</code>标签。</p><p>例如，在Markdown文件里加上一段HTML表格：</p><pre class=" language-bash"><code class="language-bash">This is a regular paragraph.<span class="token operator">&lt;</span>table<span class="token operator">></span>    <span class="token operator">&lt;</span>tr<span class="token operator">></span>        <span class="token operator">&lt;</span>td<span class="token operator">></span>Foo<span class="token operator">&lt;</span>/td<span class="token operator">></span>    <span class="token operator">&lt;</span>/tr<span class="token operator">></span><span class="token operator">&lt;</span>/table<span class="token operator">></span>This is another regular paragraph.</code></pre><p>This is a regular paragraph.</p><table>    <tr>        <td>Foo</td>    </tr></table><p>This is another regular paragraph.</p><p>请注意，Markdown语法在HTML区块标签中将不会被进行处理。例如，你无法在HTML区块内使用Markdown形式的<em>强调</em>。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/121216107.html"/>
      <url>2020/121216107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
